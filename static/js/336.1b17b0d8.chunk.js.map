{"version":3,"file":"static/js/336.1b17b0d8.chunk.js","mappings":"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","sources":["components/Api/api-servise.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.scss?3b35","components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["const KEY = 'api_key=9b0c2f9965f33f91e75ff619d689bb58';\r\nlet paramsQ = null;\r\nlet paramsP = null;\r\nasync function fetchMovies(url) {\r\n  try {\r\n    const response = await fetch(url);\r\n    return response.json();\r\n  } catch {\r\n    console.log('error');\r\n  }\r\n}\r\n\r\nexport function getTrandingMovie(page) {\r\n  paramsQ = null;\r\n  paramsP = null;\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/trending/movie/week?${KEY}&page=${page}`,\r\n  );\r\n}\r\nexport function getQueryMovie(query, page = 1) {\r\n  paramsQ = query;\r\n  paramsP = page;\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/search/movie?${KEY}&language=en-US&page=1&include_adult=true&query=${query}&page=${page}`,\r\n  );\r\n}\r\n\r\nexport function getParams() {\r\n  return { paramsQ, paramsP };\r\n}\r\n\r\nexport function getDetailsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}?${KEY}&language=en-US`,\r\n  );\r\n}\r\nexport function getCreditsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?${KEY}&language=en-US`,\r\n  );\r\n}\r\nexport function getReviewsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?${KEY}&language=en-US`,\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetailsPage_btn__-lQpP\",\"description\":\"MovieDetailsPage_description__LNJUC\",\"movieDescription\":\"MovieDetailsPage_movieDescription__17T23\",\"title\":\"MovieDetailsPage_title__hfsBd\",\"genresList\":\"MovieDetailsPage_genresList__FwcA7\",\"genresItem\":\"MovieDetailsPage_genresItem__mvGVE\",\"btnList\":\"MovieDetailsPage_btnList__KJpIY\",\"btnItem\":\"MovieDetailsPage_btnItem__3xO1H\",\"activeBtn\":\"MovieDetailsPage_activeBtn__8Q1ue\"};","import { useState, useEffect, lazy, Suspense } from 'react';\r\nimport {\r\n  useParams,\r\n  NavLink,\r\n  Route,\r\n  Routes,\r\n  useNavigate,\r\n  // useRouteMatch\r\n} from 'react-router-dom';\r\nimport * as api from '../Api/api-servise';\r\nimport styles from './MovieDetailsPage.module.scss';\r\n\r\n\r\nconst Cast = lazy(() => import('../Cast/Cast.js'));\r\nconst Reviews = lazy(() => import('../Reviews/Reviews.js'));\r\n\r\nexport default function MovieDetailsPage() {\r\n  // const match = useRouteMatch();\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const navigate = useNavigate();\r\n  const id = useParams().movieId;\r\n  // console.log (match);\r\n  useEffect(() => {\r\n    api.getDetailsMovie(id).then(setMovie);\r\n  }, [id]);\r\n\r\n  function handleBack(e) {\r\n    const { paramsP, paramsQ } = api.getParams();\r\n    paramsQ\r\n      ? navigate(`/movies/?query=${paramsQ}&page=${paramsP}`)\r\n      : navigate('/');\r\n  }\r\n\r\n  return (\r\n    movie && (\r\n      <div>\r\n        <button\r\n          className={styles.btn}\r\n          type=\"button\"\r\n          onClick={e => {\r\n            handleBack(e);\r\n          }}\r\n        >\r\n          go back\r\n        </button>\r\n        <div className={styles.description}>\r\n          <div className={styles.movie}>\r\n            {movie.poster_path ? (\r\n              <img\r\n                src={`https://www.themoviedb.org/t/p/w500${movie.poster_path}`}\r\n                alt={id}\r\n                width=\"300\"\r\n              ></img>\r\n            ) : (\r\n              <img src=\"/noPhoto.jpg\" alt={id} width=\"300\"></img>\r\n            )}\r\n          </div>\r\n          <div className={styles.movieDescription}>\r\n            <h2>\r\n              {movie.title} ({new Date(movie.release_date).getFullYear()})\r\n            </h2>\r\n            <p>User Score: {movie.vote_average * 10}%</p>\r\n            <h2 className={styles.title}>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n            <div className={styles.genres}>\r\n              <h2 className={styles.title}>Genres: </h2>\r\n              <ul className={styles.genresList}>\r\n                {movie.genres.map(genre => {\r\n                  return (\r\n                    <li className={styles.genresItem} key={genre.id}>\r\n                      {genre.name}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Suspense fallback={<p>Загрузка...</p>}>\r\n            <ul className={styles.btnList}>\r\n              <li className={styles.btnItem}>\r\n                <NavLink\r\n                  className={navData =>\r\n                    navData.isActive ? styles.activeBtn : styles.btn\r\n                  }\r\n                  to={`/movies/${id}/cast`}\r\n                >\r\n                  Cast\r\n                </NavLink>\r\n              </li>\r\n              <li className={styles.btnItem}>\r\n                <NavLink\r\n                  className={navData =>\r\n                    navData.isActive ? styles.activeBtn : styles.btn\r\n                  }\r\n                  to={`/movies/${id}/reviews`}\r\n                >\r\n                  Reviews\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </Suspense>\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/cast\" element={<Cast id={id} />}></Route>\r\n          <Route path=\"/reviews\" element={<Reviews id={id} />}></Route>\r\n        </Routes>\r\n      </div>\r\n    )\r\n  );\r\n}"],"names":["KEY","paramsQ","paramsP","fetchMovies","url","fetch","response","json","console","log","getTrandingMovie","page","getQueryMovie","query","getParams","getDetailsMovie","id","getCreditsMovie","getReviewsMovie","Cast","lazy","Reviews","MovieDetailsPage","useState","movie","setMovie","navigate","useNavigate","useParams","movieId","useEffect","api","then","className","styles","type","onClick","e","handleBack","poster_path","src","alt","width","title","Date","release_date","getFullYear","vote_average","overview","genres","map","genre","name","Suspense","fallback","navData","isActive","to","path","element"],"sourceRoot":""}