{"version":3,"file":"static/js/699.f65808e7.chunk.js","mappings":"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","sources":["components/Api/api-servise.js","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviesPage.module.scss?8246","components/MoviesPage/MoviesPage.js"],"sourcesContent":["const KEY = 'api_key=9b0c2f9965f33f91e75ff619d689bb58';\r\nlet paramsQ = null;\r\nlet paramsP = null;\r\nasync function fetchMovies(url) {\r\n  try {\r\n    const response = await fetch(url);\r\n    return response.json();\r\n  } catch {\r\n    console.log('error');\r\n  }\r\n}\r\n\r\nexport function getTrandingMovie(page) {\r\n  paramsQ = null;\r\n  paramsP = null;\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/trending/movie/week?${KEY}&page=${page}`,\r\n  );\r\n}\r\nexport function getQueryMovie(query, page = 1) {\r\n  paramsQ = query;\r\n  paramsP = page;\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/search/movie?${KEY}&language=en-US&page=1&include_adult=true&query=${query}&page=${page}`,\r\n  );\r\n}\r\n\r\nexport function getParams() {\r\n  return { paramsQ, paramsP };\r\n}\r\n\r\nexport function getDetailsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}?${KEY}&language=en-US`,\r\n  );\r\n}\r\nexport function getCreditsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?${KEY}&language=en-US`,\r\n  );\r\n}\r\nexport function getReviewsMovie(id) {\r\n  return fetchMovies(\r\n    `https://api.themoviedb.org/3/movie/${id}/reviews?${KEY}&language=en-US`,\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__K2QNJ\",\"item\":\"MoviesPage_item__bd7st\",\"title\":\"MoviesPage_title__bUXXw\",\"link\":\"MoviesPage_link__TOWOj\",\"img\":\"MoviesPage_img__36DKc\",\"form\":\"MoviesPage_form__KoXhV\",\"input\":\"MoviesPage_input__WgEB1\",\"searchBtn\":\"MoviesPage_searchBtn__wgR3S\",\"GoBackBtn\":\"MoviesPage_GoBackBtn__F934p\"};","import * as api from '../Api/api-servise';\r\nimport styles from './MoviesPage.module.scss';\r\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { Container, Pagination, Stack } from '@mui/material';\r\n\r\nexport default function MoviesPage() {\r\n  const [value, setValue] = useState(null);\r\n  const [movies, setMovies] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const [pageQty, setPageQty] = useState(null);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const paramsQuery = new URLSearchParams(location.search).get('query');\r\n  const paramsPage = new URLSearchParams(location.search).get('page');\r\n\r\n  useEffect(() => {\r\n    if (!paramsQuery) return;\r\n    api.getQueryMovie(paramsQuery, paramsPage).then(data => {\r\n      setMovies(data);\r\n      setPage(data.page);\r\n      setPageQty(data.total_pages);\r\n    });\r\n  }, [paramsQuery, paramsPage, value]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    navigate(`/movies/?query=${value}&page=${1}`);\r\n  }\r\n\r\n  function handleChangeValue(e) {\r\n    setValue(e.target.value.trim());\r\n  }\r\n\r\n  function handleBack(e) {\r\n    navigate('/');\r\n  }\r\n\r\n  return (\r\n    <div className={styles.page}>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={e => {\r\n          handleSubmit(e);\r\n        }}\r\n      >\r\n        <button\r\n          className={styles.GoBackBtn}\r\n          type=\"button\"\r\n          onClick={e => {\r\n            handleBack(e);\r\n          }}\r\n        >\r\n          go back\r\n        </button>\r\n        <input\r\n          placeholder={paramsQuery ? paramsQuery : 'Please, enter your query'}\r\n          className={styles.input}\r\n          onChange={e => {\r\n            handleChangeValue(e);\r\n          }}\r\n        />\r\n        <button className={styles.searchBtn} type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      {movies && (\r\n        <ul className={styles.list}>\r\n          {movies.results.map(movie => {\r\n            return (\r\n              <li className={styles.item} key={movie.id}>\r\n                <NavLink className={styles.link} to={`/movies/${movie.id}`}>\r\n                  {movie.poster_path ? (\r\n                    <img\r\n                      className={styles.img}\r\n                      src={`https://www.themoviedb.org/t/p/w500${movie.poster_path}`}\r\n                      alt={movie.id}\r\n                    ></img>\r\n                  ) : (\r\n                    <img\r\n                      className={styles.img}\r\n                      src=\"/noSignal.jpg\"\r\n                      alt={movie.id}\r\n                    ></img>\r\n                  )}\r\n                  <p className={styles.title}>{movie.title}</p>\r\n                </NavLink>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n      {pageQty && (\r\n        <Container maxWidth=\"md\">\r\n          <Stack spacing={2}>\r\n            {!!pageQty && (\r\n              <Pagination\r\n                count={pageQty}\r\n                page={page}\r\n                onChange={(e, valuePage) => {\r\n                  navigate(`/movies/?query=${paramsQuery}&page=${valuePage}`);\r\n                  window.scrollTo({\r\n                    top: 80,\r\n                    behavior: 'smooth',\r\n                  });\r\n                }}\r\n                sx={{ marginY: 3, marginX: 'auto' }}\r\n              />\r\n            )}\r\n          </Stack>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":["KEY","paramsQ","paramsP","fetchMovies","url","fetch","response","json","console","log","getTrandingMovie","page","getQueryMovie","query","getParams","getDetailsMovie","id","getCreditsMovie","getReviewsMovie","MoviesPage","useState","value","setValue","movies","setMovies","setPage","pageQty","setPageQty","location","useLocation","navigate","useNavigate","paramsQuery","URLSearchParams","search","get","paramsPage","useEffect","api","then","data","total_pages","className","styles","onSubmit","e","preventDefault","handleSubmit","type","onClick","placeholder","onChange","target","trim","handleChangeValue","results","map","movie","to","poster_path","src","alt","title","Container","maxWidth","Stack","spacing","Pagination","count","valuePage","window","scrollTo","top","behavior","sx","marginY","marginX"],"sourceRoot":""}